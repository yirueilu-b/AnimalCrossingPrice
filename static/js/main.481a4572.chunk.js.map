{"version":3,"sources":["Component/Table.js","Component/Navbar.js","Component/Option.js","App.js","serviceWorker.js","index.js","Component/bg.png","data/fish.csv"],"names":["useStyles","makeStyles","theme","table","tablePaper","marginTop","spacing","marginBottom","StyledTableCell","withStyles","head","backgroundColor","palette","background","paper","color","text","primary","backgroundImage","Image","padding","fontSize","body","TableCell","StyledTableRow","root","action","hover","TableRow","CustomizedTables","props","classes","console","log","data","filterName","TableContainer","className","component","Paper","Table","aria-label","style","width","TableHead","align","TableBody","map","row","name","indexOf","key","price","location","time","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","BackToTop","Fragment","CssBaseline","AppBar","Toolbar","IconButton","edge","onToggleDark","Typography","variant","id","Fab","size","height","textField","resize","Option","Grid","container","justify","alignItems","direction","item","xs","md","TextField","onChange","handleFilterNameChange","InputProps","input","fullWidth","label","autoFocus","flexGrow","maxWidth","textAlign","borderRadius","App","e","value","setState","state","rows","bind","getData","toggleDarkTheme","this","fetch","importedCsvData","response","reader","getReader","read","result","decoder","TextDecoder","csv","decode","results","Papa","parse","header","pop","newPaletteType","myComponent","length","createMuiTheme","type","Navbar","Container","React","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.481a4572.chunk.js","sourcesContent":["import React from 'react';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Image from './bg.png';\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        // minWidth: 300,\r\n        // maxWidth: '100%',\r\n    },\r\n    tablePaper: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: '15vh'\r\n    }\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        backgroundImage: `url(${Image})`,\r\n        padding: theme.spacing(2),\r\n        fontSize: 14,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    console.log('props.data', props.data, props.filterName);\r\n    return (\r\n        <TableContainer className={classes.tablePaper} component={Paper}>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n                <colgroup>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"center\">中文名稱</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">價格</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">出沒地點</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">出沒時間</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {\r\n                        props.data.map((row) => (row.name.indexOf(props.filterName) !== -1 ?\r\n                                <StyledTableRow key={row.name}>\r\n                                    <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{row.price}</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{row.location}</StyledTableCell>\r\n                                    <StyledTableCell align=\"center\">{row.time}</StyledTableCell>\r\n                                </StyledTableRow>\r\n                                :\r\n                                <StyledTableRow key={row.name}>\r\n                                    <></>\r\n                                </StyledTableRow>\r\n                            )\r\n                        )\r\n                    }\r\n                </TableBody>\r\n\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst Title = \"動物森友會魚類蟲類查價\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n// Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction BackToTop(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar color=\"default\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"default\" aria-label=\"menu\" onClick={props.onToggleDark}>\r\n                        {props.theme === \"light\" ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">{Title}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BackToTop","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        height: 96,\r\n    },\r\n    textField: {\r\n    },\r\n//style for font size\r\n    resize: {\r\n        fontSize: 18\r\n    },\r\n}));\r\n\r\n\r\nfunction Option(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <Grid className={classes.root} container spacing={3}\r\n                  justify='center'\r\n                  alignItems=\"center\"\r\n                  direction=\"row\"\r\n            >\r\n                <Grid item xs={10} md={8} container spacing={1}\r\n                      justify='center'\r\n                      alignItems=\"flex-end\"\r\n                      direction=\"row\"\r\n                >\r\n                    <Grid container item xs={1} md={1}\r\n                          alignItems=\"flex-end\"\r\n                          justify='flex-end'>\r\n                        <SearchIcon/>\r\n                    </Grid>\r\n                    <Grid item xs={9} md={7}>\r\n                        <TextField\r\n                            onChange={props.handleFilterNameChange}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    input: classes.resize,\r\n                                },\r\n                            }}\r\n                            className={classes.textField}\r\n                            fullWidth id=\"input-with-icon-grid\"\r\n                            label=\"輸入名稱以查詢\"\r\n                            autoFocus={true}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Option","import React from 'react';\nimport './Component/Table'\nimport Navbar from \"./Component/Navbar\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Option from './Component/Option'\nimport DataTable from './Component/Table'\nimport {makeStyles} from '@material-ui/core/styles';\nimport importedCsvData from './data/fish.csv';\nimport Papa from 'papaparse';\nimport {withStyles} from '@material-ui/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: '100vw',\n        height: '100%',\n        marginTop: theme.spacing(2),\n        textAlign: 'center',\n    },\n    paper: {\n        height: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    table: {\n        width: '100vw',\n        borderRadius: '10em'\n    }\n}));\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: 'dark',\n            filterName: '',\n            rows: []\n        };\n        this.handleFilterNameChange = this.handleFilterNameChange.bind(this);\n        this.getData = this.getData.bind(this);\n        this.toggleDarkTheme = this.toggleDarkTheme.bind(this)\n\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    async getData() {\n        const response = await fetch(importedCsvData);\n        const reader = response.body.getReader();\n        const result = await reader.read(); // raw array\n        const decoder = new TextDecoder('utf-8');\n        const csv = decoder.decode(result.value);// the csv text\n        const results = Papa.parse(csv, {header: true}); // object with { data, errors, meta }\n        results.data.pop();\n        const rows = results.data;// array of objects\n        // console.log(rows);\n        this.setState({rows: rows});\n    }\n\n\n    toggleDarkTheme() {\n        let newPaletteType = this.state.theme === \"light\" ? \"dark\" : \"light\";\n        this.setState({theme: newPaletteType});\n    };\n\n    handleFilterNameChange = (e) => {\n        console.log(e.target.value);\n        this.setState({filterName: e.target.value});\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        let myComponent;\n        if (this.state.rows.length !== 0) {\n            console.log(this.state.rows);\n            myComponent = <Grid container spacing={2}\n                                justify='center'\n                                alignItems=\"center\"\n                                direction=\"row\"\n            >\n                <Grid item xs={12} md={7} className={classes.table}>\n                    <DataTable filterName={this.state.filterName} data={this.state.rows}/>\n                </Grid>\n            </Grid>\n        } else {\n            myComponent = null\n        }\n        // myComponent = null\n\n        let theme = createMuiTheme({\n          palette: {\n            type: this.state.theme\n          }\n        });\n        return (\n            <MuiThemeProvider theme={theme}>\n\n                <CssBaseline/>\n\n                <Navbar theme={this.state.theme} onToggleDark={this.toggleDarkTheme}/>\n\n                <Container className={classes.root}>\n                    <Option handleFilterNameChange={this.handleFilterNameChange}/>\n                    {myComponent}\n                </Container>\n            </MuiThemeProvider>\n        );\n\n    }\n\n}\n\nexport default withStyles(useStyles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.cea8d8de.png\";","module.exports = __webpack_public_path__ + \"static/media/fish.77ac2ab3.csv\";"],"sourceRoot":""}