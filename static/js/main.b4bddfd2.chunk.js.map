{"version":3,"sources":["data/fish.csv","data/insect.csv","Component/Table.js","Component/Navbar.js","Component/Option.js","App.js","serviceWorker.js","index.js","Component/bg.png"],"names":["module","exports","useStyles","makeStyles","theme","table","tablePaper","marginTop","spacing","marginBottom","StyledTableCell","withStyles","head","backgroundColor","palette","background","paper","color","text","primary","backgroundImage","Image","padding","fontSize","body","TableCell","StyledTableRow","root","action","hover","TableRow","useToolbarStyles","paddingLeft","paddingRight","title","textAlign","flex","EnhancedTableToolbar","props","classes","Toolbar","className","Typography","variant","id","component","Tooltip","IconButton","aria-label","CustomizedTables","React","useState","page","setPage","useEffect","console","log","data","length","TableContainer","Paper","Table","style","width","TableHead","align","TableBody","slice","map","row","key","name","price","location","time","TablePagination","labelDisplayedRows","from","to","count","labelRowsPerPage","rowsPerPageOptions","rowsPerPage","onChangePage","event","newPage","position","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","BackToTop","Fragment","CssBaseline","AppBar","edge","onToggleDark","Fab","size","height","textField","resize","Option","Grid","container","justify","alignItems","direction","item","xs","md","TextField","onChange","handleFilterNameChange","InputProps","input","fullWidth","label","autoFocus","flexGrow","maxWidth","borderRadius","App","e","setState","filterName","value","handleRowsFilter","state","rows","currentRows","bind","getData","toggleDarkTheme","this","fetch","insectData","responseInsect","readerInsect","getReader","read","resultInsect","decoder","TextDecoder","csvInsect","decode","resultsInsect","Papa","parse","header","pop","rowsInsect","fishData","responseFish","readerFish","resultFish","csvFish","resultsFish","rowsFish","concat","newPaletteType","tmpRows","filter","indexOf","myComponent","createMuiTheme","type","Navbar","Container","Component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4bddfd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fish.77ac2ab3.csv\";","module.exports = __webpack_public_path__ + \"static/media/insect.2ae70597.csv\";","import React from 'react';\r\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Image from './bg.png';\r\nimport Paper from \"@material-ui/core/Paper/Paper\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {useEffect} from 'react'\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        // minWidth: 300,\r\n        // maxWidth: '100%',\r\n    },\r\n    tablePaper: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: '15vh'\r\n    }\r\n}));\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        backgroundImage: `url(${Image})`,\r\n        padding: theme.spacing(2),\r\n        fontSize: 14,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundImage: `url(${Image})`,\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        paddingLeft:theme.spacing(6),\r\n        textAlign:'center',\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    return (\r\n        <Toolbar className={classes.root}>\r\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                價目表\r\n            </Typography>\r\n            <Tooltip title=\"過濾器\">\r\n                <IconButton aria-label=\"過濾器\">\r\n                    <FilterListIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport default function CustomizedTables(props) {\r\n    const classes = useStyles();\r\n    // console.log('props.data', props.data, props.filterName);\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n    useEffect(() => {\r\n        console.log(props.data.length);\r\n        setPage(0);\r\n    }, [props.data.length]);\r\n\r\n    return (\r\n        <TableContainer className={classes.tablePaper} component={Paper}>\r\n            <EnhancedTableToolbar/>\r\n            <Table className={classes.table} aria-label=\"customized table\">\r\n\r\n                <colgroup>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                    <col style={{width: '25%'}}/>\r\n                </colgroup>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <StyledTableCell align=\"center\">中文名稱</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">價格</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">出沒地點</StyledTableCell>\r\n                        <StyledTableCell align=\"center\">出沒時間</StyledTableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                    {\r\n\r\n                        props.data.slice(page * 10, page * 10 + 10)\r\n                            .map((row) => (\r\n                                    <StyledTableRow key={row.name}>\r\n                                        <StyledTableCell align=\"center\">{row.name}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.price}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.location}</StyledTableCell>\r\n                                        <StyledTableCell align=\"center\">{row.time}</StyledTableCell>\r\n                                    </StyledTableRow>\r\n                                )\r\n                            )\r\n                    }\r\n                </TableBody>\r\n\r\n            </Table>\r\n            <TablePagination\r\n                labelDisplayedRows={({from, to, count}) => `${from}~${to}/${count}`}\r\n                labelRowsPerPage={''}\r\n                rowsPerPageOptions={[10]}\r\n                component=\"div\"\r\n                count={props.data.length}\r\n                rowsPerPage={10}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n            />\r\n        </TableContainer>\r\n\r\n    );\r\n}","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst Title = \"動森魚類蟲類快速查價\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n// Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction BackToTop(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar color=\"default\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"default\" aria-label=\"menu\" onClick={props.onToggleDark}>\r\n                        {props.theme === \"light\" ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">{Title}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BackToTop","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(2),\r\n        height: 96,\r\n    },\r\n    textField: {\r\n    },\r\n//style for font size\r\n    resize: {\r\n        fontSize: 18\r\n    },\r\n}));\r\n\r\n\r\nfunction Option(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <Grid className={classes.root} container spacing={3}\r\n                  justify='center'\r\n                  alignItems=\"center\"\r\n                  direction=\"row\"\r\n            >\r\n                <Grid item xs={10} md={8} container spacing={1}\r\n                      justify='center'\r\n                      alignItems=\"flex-end\"\r\n                      direction=\"row\"\r\n                >\r\n                    <Grid container item xs={1} md={1}\r\n                          alignItems=\"flex-end\"\r\n                          justify='flex-end'>\r\n                        <SearchIcon/>\r\n                    </Grid>\r\n                    <Grid item xs={9} md={7}>\r\n                        <TextField\r\n                            onChange={props.handleFilterNameChange}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    input: classes.resize,\r\n                                },\r\n                            }}\r\n                            className={classes.textField}\r\n                            fullWidth id=\"input-with-icon-grid\"\r\n                            label=\"輸入名稱以查詢\"\r\n                            autoFocus={true}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Option","import React from 'react';\nimport './Component/Table'\nimport Navbar from \"./Component/Navbar\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Option from './Component/Option'\nimport DataTable from './Component/Table'\nimport {makeStyles} from '@material-ui/core/styles';\nimport fishData from './data/fish.csv';\nimport insectData from './data/insect.csv';\nimport Papa from 'papaparse';\nimport {withStyles} from '@material-ui/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: '100vw',\n        height: '100%',\n        marginTop: theme.spacing(2),\n        textAlign: 'center',\n    },\n    paper: {\n        height: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    table: {\n        width: '100vw',\n        borderRadius: '10em'\n    }\n}));\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: 'dark',\n            filterName: '',\n            rows: [],\n            currentRows: []\n        };\n        this.handleFilterNameChange = this.handleFilterNameChange.bind(this);\n        this.getData = this.getData.bind(this);\n        this.toggleDarkTheme = this.toggleDarkTheme.bind(this)\n\n    }\n\n    componentWillMount() {\n        this.getData();\n    }\n\n    async getData() {\n        let responseInsect = await fetch(insectData);\n        let readerInsect = responseInsect.body.getReader();\n        let resultInsect = await readerInsect.read(); // raw array\n        let decoder = new TextDecoder('utf-8');\n        let csvInsect = decoder.decode(resultInsect.value);// the csv text\n        let resultsInsect = Papa.parse(csvInsect, {header: true}); // object with { data, errors, meta }\n        resultsInsect.data.pop();\n        let rowsInsect = resultsInsect.data;// array of objects\n\n        let responseFish = await fetch(fishData);\n        let readerFish = responseFish.body.getReader();\n        let resultFish = await readerFish.read(); // raw array\n        let csvFish = decoder.decode(resultFish.value);// the csv text\n        let resultsFish = Papa.parse(csvFish, {header: true}); // object with { data, errors, meta }\n        resultsFish.data.pop();\n        const rowsFish = resultsFish.data;// array of objects\n        // console.log(rows);\n        this.setState({rows: rowsFish.concat(rowsInsect)});\n        this.setState({currentRows: rowsFish.concat(rowsInsect)});\n    }\n\n\n    toggleDarkTheme() {\n        let newPaletteType = this.state.theme === \"light\" ? \"dark\" : \"light\";\n        this.setState({theme: newPaletteType});\n    };\n\n    handleRowsFilter(e){\n        let tmpRows = this.state.rows.filter(row => row.name.indexOf(e.target.value) !== -1);\n        if (tmpRows.length === 0) {\n            this.setState({currentRows: this.state.rows});\n        } else {\n            this.setState({currentRows: tmpRows});\n        }\n    };\n\n    handleFilterNameChange = (e) => {\n        // console.log(e.target.value);\n        this.setState({filterName: e.target.value});\n        this.handleRowsFilter(e);\n        // let tmpRows = this.state.rows.map((row) => (row.name.indexOf(this.state.filterName) !== -1)? row:null);\n    };\n\n    render() {\n        const {classes} = this.props;\n\n        let myComponent;\n        if (this.state.rows.length !== 0) {\n            // console.log(this.state.rows);\n            myComponent = <Grid container spacing={2}\n                                justify='center'\n                                alignItems=\"center\"\n                                direction=\"row\"\n            >\n                <Grid item xs={12} md={7} className={classes.table}>\n                    <DataTable filterName={this.state.filterName} data={this.state.currentRows}/>\n                </Grid>\n            </Grid>\n        } else {\n            myComponent = null\n        }\n        // myComponent = null\n\n        let theme = createMuiTheme({\n            palette: {\n                type: this.state.theme\n            }\n        });\n        return (\n            <MuiThemeProvider theme={theme}>\n\n                <CssBaseline/>\n\n                <Navbar theme={this.state.theme} onToggleDark={this.toggleDarkTheme}/>\n\n                <Container className={classes.root}>\n                    <Option handleFilterNameChange={this.handleFilterNameChange}/>\n                    {myComponent}\n                </Container>\n\n            </MuiThemeProvider>\n        );\n\n    }\n\n}\n\nexport default withStyles(useStyles)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.cea8d8de.png\";"],"sourceRoot":""}