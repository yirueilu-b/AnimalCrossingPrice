{"version":3,"sources":["Component/Navbar.js","Component/Option.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","spacing","right","ScrollTop","props","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","className","BackToTop","Fragment","CssBaseline","AppBar","color","Toolbar","IconButton","edge","aria-label","onToggleDark","Typography","variant","id","Fab","size","paper","height","padding","textAlign","formControl","margin","width","selectEmpty","marginTop","Option","React","useState","age","state","setState","Grid","container","item","xs","md","alignItems","TextField","fullWidth","label","FormControl","NativeSelect","value","name","onChange","inputProps","disabled","Paper","flexGrow","maxWidth","table","minHeight","App","palette","type","setTheme","muiTheme","createMuiTheme","Navbar","newPaletteType","Container","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef7cf33e.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n// Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction BackToTop(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar color=\"default\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"default\" aria-label=\"menu\" onClick={props.onToggleDark}>\r\n                        {props.theme === \"light\" ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">Animal Crossing Price List</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BackToTop","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        height: 48,\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction Option(props) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        age: '',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        const name = event.target.name;\r\n        setState({\r\n            ...state,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item xs={1}>\r\n                            <SearchIcon/>\r\n                        </Grid>\r\n                        <Grid item xs={11}>\r\n                            <TextField fullWidth id=\"input-with-icon-grid\" label=\"Name of the item\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item xs={12}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <NativeSelect\r\n                                    className={classes.selectEmpty}\r\n                                    value={state.age}\r\n                                    name=\"age\"\r\n                                    onChange={handleChange}\r\n                                    inputProps={{'aria-label': 'age'}}\r\n                                >\r\n                                    <option value=\"\" disabled>\r\n                                        Placeholder\r\n                                    </option>\r\n                                    <option value={10}>Ten</option>\r\n                                    <option value={20}>Twenty</option>\r\n                                    <option value={30}>Thirty</option>\r\n                                </NativeSelect>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>xs=6</Paper>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>xs=6</Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Paper className={classes.paper}>xs=3</Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Option","import React from 'react';\nimport './Component/Table'\nimport Navbar from \"./Component/Navbar\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport {useState} from 'react';\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Option from './Component/Option'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: '100vw',\n        marginTop: theme.spacing(2),\n        textAlign: 'center',\n    },\n    paper: {\n        height:'100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    table:{\n        minHeight: '100vh'\n    }\n}));\n\nfunction App() {\n    const [theme, setTheme] = useState({\n        palette: {\n            type: \"light\"\n        }\n    });\n    const toggleDarkTheme = () => {\n        let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        setTheme({\n            palette: {\n                type: newPaletteType\n            }\n        });\n    };\n    const muiTheme = createMuiTheme(theme);\n    const classes = useStyles();\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline/>\n\n            <Navbar theme={theme.palette.type} onToggleDark={toggleDarkTheme}/>\n\n            <Container className={classes.root}>\n\n                <Option/>\n\n                <Grid container spacing={2}>\n                    <Grid item xs={12} className={classes.table}>\n                        <Paper className={classes.paper}>xs=12</Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}