{"version":3,"sources":["Component/Table.js","Component/Navbar.js","Component/Option.js","App.js","serviceWorker.js","index.js"],"names":["createData","name","calories","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","component","useStyles","width","paper","marginBottom","table","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","size","aria-label","target","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","BackToTop","Fragment","CssBaseline","AppBar","IconButton","edge","onToggleDark","Fab","textAlign","formControl","selectEmpty","marginTop","Option","Grid","container","item","xs","alignItems","TextField","fullWidth","flexGrow","maxWidth","App","setTheme","muiTheme","createMuiTheme","Navbar","newPaletteType","Container","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1239011b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return {name, calories, fat, carbs, protein};\r\n}\r\n\r\n\r\nconst rows = [\r\n    createData('Cupcakaaaaaaaaaaaaaaaaae', 305, 3.7, 67, 4.3),\r\n    createData('Donut', 452, 25.0, 51, 4.9),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n    createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n    createData('KitKat', 518, 26.0, 65, 7.0),\r\n    createData('Lollipop', 392, 0.2, 98, 0.0),\r\n    createData('Marshmallow', 318, 0, 81, 2.0),\r\n    createData('Nougat', 360, 19.0, 9, 37.0),\r\n    createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    {id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)'},\r\n    {id: 'calories', numeric: true, disablePadding: false, label: 'Calories'},\r\n    {id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)'},\r\n    {id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)'},\r\n    {id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)'},\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={rowCount > 0 && numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{'aria-label': 'select all desserts'}}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const {numSelected} = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n                搜尋結果\r\n            </Typography>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        // minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map((n) => n.name);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar numSelected={selected.length}/>\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        aria-labelledby=\"tableTitle\"\r\n                        size='medium'\r\n                        aria-label=\"enhanced table\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            numSelected={selected.length}\r\n                            order={order}\r\n                            orderBy={orderBy}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onRequestSort={handleRequestSort}\r\n                            rowCount={rows.length}\r\n                        />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(order, orderBy))\r\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                .map((row, index) => {\r\n                                    const isItemSelected = isSelected(row.name);\r\n                                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                    return (\r\n                                        <TableRow\r\n                                            hover\r\n                                            onClick={(event) => handleClick(event, row.name)}\r\n                                            role=\"checkbox\"\r\n                                            aria-checked={isItemSelected}\r\n                                            tabIndex={-1}\r\n                                            key={row.name}\r\n                                            selected={isItemSelected}\r\n                                        >\r\n                                            <TableCell padding=\"checkbox\">\r\n                                                <Checkbox\r\n                                                    checked={isItemSelected}\r\n                                                    inputProps={{'aria-labelledby': labelId}}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                {row.name}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.calories}</TableCell>\r\n                                            <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                            <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                                            <TableCell align=\"right\">{row.protein}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            {emptyRows > 0 && (\r\n                                <TableRow style={{height:  53 * emptyRows}}>\r\n                                    <TableCell colSpan={6}/>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[5, 10, 25]}\r\n                    component=\"div\"\r\n                    count={rows.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst Title = \"動物森友會魚類蟲類查價\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction ScrollTop(props) {\r\n    const {children, window} = props;\r\n    const classes = useStyles();\r\n// Note that you normally won't need to set the window ref as useScrollTrigger\r\n    // will default to window.\r\n    // This is only being set here because the demo is in an iframe.\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role=\"presentation\" className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction BackToTop(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n            <AppBar color=\"default\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" color=\"default\" aria-label=\"menu\" onClick={props.onToggleDark}>\r\n                        {props.theme === \"light\" ? <Brightness7Icon/> : <Brightness4Icon/>}\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">{Title}</Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\"/>\r\n            <ScrollTop {...props}>\r\n                <Fab size=\"small\">\r\n                    <KeyboardArrowUpIcon/>\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default BackToTop","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        height: 48,\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n// ScrollTop.propTypes = {\r\n//     children: PropTypes.element.isRequired,\r\n//     /**\r\n//      * Injected by the documentation to work in an iframe.\r\n//      * You won't need it on your project.\r\n//      */\r\n//     window: PropTypes.func,\r\n// };\r\n\r\nfunction Option(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline/>\r\n\r\n            <Grid container spacing={3}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\">\r\n                        <Grid item xs={1}>\r\n                            <SearchIcon/>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <TextField fullWidth id=\"input-with-icon-grid\" label=\"輸入名稱以查詢\"/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Option","import React from 'react';\nimport './Component/Table'\nimport Navbar from \"./Component/Navbar\"\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport {useState} from 'react';\nimport {MuiThemeProvider, createMuiTheme} from \"@material-ui/core/styles\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Option from './Component/Option'\nimport DataTable from './Component/Table'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        maxWidth: '100vw',\n        marginTop: theme.spacing(2),\n        textAlign: 'center',\n    },\n    paper: {\n        height: '100%',\n        padding: theme.spacing(2),\n        textAlign: 'center',\n    },\n    table: {}\n}));\n\nfunction App() {\n    const [theme, setTheme] = useState({\n        palette: {\n            type: \"light\"\n        }\n    });\n    const toggleDarkTheme = () => {\n        let newPaletteType = theme.palette.type === \"light\" ? \"dark\" : \"light\";\n        setTheme({\n            palette: {\n                type: newPaletteType\n            }\n        });\n    };\n    const muiTheme = createMuiTheme(theme);\n    const classes = useStyles();\n\n    return (\n        <MuiThemeProvider theme={muiTheme}>\n            <CssBaseline/>\n\n            <Navbar theme={theme.palette.type} onToggleDark={toggleDarkTheme}/>\n\n            <Container className={classes.root}>\n                <Option/>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} className={classes.table}>\n                        <DataTable/>\n                    </Grid>\n                </Grid>\n            </Container>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}